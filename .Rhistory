# dataset should be in the same folder of this RMD file
Beers = read.csv(file.choose(),header = TRUE) #loading beers dataset
# dataset should be in the same folder of this RMD file
Beers = read_csv(file.choose(),header = TRUE) #loading beers dataset
?read.csv
?read_csv
??read_csv
# dataset should be in the same folder of this RMD file
library(tidyverse)
Beers = read_csv(file.choose(),header = TRUE) #loading beers dataset
# dataset should be in the same folder of this RMD file
Beers = read.csv(file.choose(),header = TRUE) #loading beers dataset
Breweries = read.csv(file.choose(),header = TRUE) #loading breweries dataset
head(Beers)
summary(Beers)
str(Beers)
Beers$IBU
summary(Breweries)
Breweries$State
str(Breweries)
#Above this line is for self analyzing can be deleted later
#Turn Breweries State column into a factor
Breweries$State = as.factor(Breweries$State)
Breweries
str(Breweries)
library(tidyverse)
Breweries %>% group_by(State) %>%
summarise(State,count=n())
Breweries %>% group_by(State) %>%
mutate(count_by_state=n())
Breweries %>% group_by(State) %>%
mutate(count_by_state=n()) %>%
summarise(State,mean(count_by_state))
Breweries = read.csv(file.choose(),header = TRUE) #loading breweries dataset
Breweries %>% group_by(State) %>%
summarise(State,mean(count_by_state))
Breweries %>% group_by(State) %>%
summarise(State,count=n())
str(Breweries)
Breweries %>% group_by(State) %>%
summarise(count=n())
num_Breweries_by_state = Breweries %>% group_by(State) %>%
summarise(count=n())
num_Breweries_by_state
library(ggplot2)
#As we can see the number of breweries per state is in the list below, to see this better we will use a plot to show results
ggplot(data=num_Breweries_by_state)+
geom_bar(mapping=aes(x=State,y=count,fill=State),stat="identity")
#As we can see the number of breweries per state is in the list below, to see this better we will use a plot to show results
ggplot(data=num_Breweries_by_state)+
geom_bar(mapping=aes(x=State,y=count,fill=State),stat="identity") +
ggtitle("Breweries count by state")+xlab("State")+ylab("Count of Breweries")
#To see this by descend of count
ggplot(data=num_Breweries_by_state)+
geom_bar(mapping=aes(x=reorder(State,-count),y=count,fill=State),stat="identity") +
ggtitle("Breweries count by state")+xlab("State")+ylab("Count of Breweries")
str(Beers)
str(Breweries)
Beers %>%
rename(
Brewery_id = Brew_ID
)
Beers %>% rename(Brew_ID= Brewery_id)
Beers %>% left_join(Breweries, by = "Brew_ID")
left_join(Beers,Breweries, by = "Brew_ID")
str(Beers)
# dataset should be in the same folder of this RMD file
Beers = read.csv(file.choose(),header = TRUE) #loading beers dataset
Beers %>% rename(Brew_ID= Brewery_id)
str(Beers)
Beers = Beers %>% rename(Brew_ID= Brewery_id)
left_join(Beers,Breweries, by = "Brew_ID")
head(Beers)
Beers.with.Breweries = left_join(Beers,Breweries, by = "Brew_ID")
head(Beers.with.Breweries)
Beers.with.Breweries%>% filter(is.na(IBU))
Beers.with.Breweries%>% filter(is.na(IBU)) %>% summarise(count=n())
head(Beers.with.Breweries)
str(Beers.with.Breweries)
Beers.with.Breweries%>% filter(is.na(ABV)) %>% summarise(count=n())
Beers.with.Breweries%>% filter(is.na(ABV))
Beers.with.Breweries%>% filter(is.na(Style)) %>% summarise(count=n())
Beers.with.Breweries = Beers.with.Breweries %>% rename(Brew_Name= Name.y)
Beers.with.Breweries%>% filter(is.na(Style)) %>% summarise(count=n()) #no missing value on Style
str(Beers.with.Breweries)
Beers.with.Breweries%>% filter(is.na(Beer_ID)) %>% summarise(count=n()) #no missing value on Style
Beers.with.Breweries%>% filter(is.na(Ounces)) %>% summarise(count=n()) #no missing value on Style
Beers.with.Breweries%>% filter(is.na(City)) %>% summarise(count=n()) #no missing value on Style
Beers.with.Breweries%>% filter(is.na(State)) %>% summarise(count=n()) #no missing value on Style
Beers.with.Breweries%>% filter(is.na(Beer_ID)) %>% summarise(count=n()) #no missing value on State
Beers.with.Breweries%>% filter(is.na(Brew_ID)) %>% summarise(count=n()) #no missing value on State
Beers.with.Breweries%>% filter(is.na(Brew_Name)) %>% summarise(count=n()) #no missing value on State
Beers.with.Breweries = Beers.with.Breweries %>% rename(Beer_Name= Name.x)
str(Beers.with.Breweries)
Beers.with.Breweries%>% filter(is.na(Beer_Name)) %>% summarise(count=n()) #no missing value on State
Beers.with.Breweries%>% filter(is.na(Beer_ID)) %>% summarise(count=n()) #no missing value on Beer_ID
Beers.with.Breweries%>% filter(is.na(Brew_ID)) %>% summarise(count=n()) #no missing value on Brew_ID
Beers.with.Breweries%>% filter(is.na(Beer_Name)) %>% summarise(count=n()) #no missing value on Beer_Name
Beers.with.Breweries%>% filter(is.na(Beer_ID)) %>% summarise(count=n()) #no missing value on Beer_ID
Beers.with.Breweries%>% filter(is.na(ABV)) %>% summarise(count=n()) #62 missing values on ABV
Beers.with.Breweries%>% filter(is.na(IBU)) %>% summarise(count=n()) #1055 missing values on IBU column
Beers.with.Breweries%>% filter(is.na(Brew_ID)) %>% summarise(count=n()) #no missing value on Brew_ID
Beers.with.Breweries%>% filter(is.na(Style)) %>% summarise(count=n()) #no missing value on Style
Beers.with.Breweries%>% filter(is.na(Ounces)) %>% summarise(count=n()) #no missing value on Ounce
Beers.with.Breweries%>% filter(is.na(Brew_Name)) %>% summarise(count=n()) #no missing value on Brew_Name
Beers.with.Breweries%>% filter(is.na(City)) %>% summarise(count=n()) #no missing value on City
Beers.with.Breweries%>% filter(is.na(State)) %>% summarise(count=n()) #no missing value on State
Breweries = read.csv("/Users/mingyang/Desktop/SMU/DoingDS_Fall2020/MSDS6306-Case-Study1/Breweries",header = TRUE) #loading breweries dataset
summary(Beers.with.Breweries)
summary(Beers.with.Breweries)
library(mice)
install.packages("mice")
library(mice)
md.pattern(Beers.with.Breweries)
# Using airquality dataset
data <- airquality
data[4:10,3] <- rep(NA,7)
data[1:5,4] <- NA
# Removing categorical variables
data <- airquality[-c(5,6)]
summary(data)
#-------------------------------------------------------------------------------
# Look for missing > 5% variables
pMiss <- function(x){sum(is.na(x))/length(x)*100}
# Check each column
apply(data,2,pMiss)
# Check each row
apply(data,1,pMiss)
#-------------------------------------------------------------------------------
# Missing data pattern
library(mice)
# Missing data pattern
md.pattern(data)
library(VIM)
# Plot of missing data pattern
aggr_plot <- aggr(data, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(data), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
# Box plot
marginplot(data[c(1,2)])
install.packages("VIM")
library(VIM)
# Plot of missing data pattern
aggr_plot <- aggr(data, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(data), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
# Box plot
marginplot(data[c(1,2)])
tempData <- mice(data,m=5,maxit=50,meth='pmm',seed=500)
head(data)
summary(tempData)
# Get imputed data (for the Ozone variable)
tempData$imp$Ozone
# Possible imputation models provided by mice() are
methods(mice)
?mice.impute.pmm
summary(data)
# Get imputed data (for the Ozone variable)
tempData$imp$Ozone
# What imputation method did we use?
tempData$meth
# Get completed datasets (observed and imputed)
completedData <- complete(tempData,1)
summary(completedData)
# Scatterplot Ozone vs all
xyplot(tempData,Ozone ~ Wind+Temp+Solar.R,pch=18,cex=1)
# Density plot original vs imputed dataset
densityplot(tempData)
# Another take on the density: stripplot()
stripplot(tempData, pch = 20, cex = 1.2)
modelFit1 <- with(tempData,lm(Temp~ Ozone+Solar.R+Wind))
pool(modelFit1)
summary(pool(modelFit1))
# Using more imputed datasets
tempData2 <- mice(data,m=50,seed=245435)
modelFit2 <- with(tempData2,lm(Temp~ Ozone+Solar.R+Wind))
summary(pool(modelFit2))
md.pattern(Beers.with.Breweries)
tempData <- mice(Beers.with.Breweries,m=5,maxit=50,meth='pmm',seed=20)
summary(tempData)
completedData <- complete(tempData,1)
head(completeData)
head(completedData)
head(completedData,100)
# Density plot original vs imputed dataset
densityplot(tempData)
summary(Beers.with.Breweries)
summary(Beers.with.Breweries)
summary(completedData)
completeData %>% group_by(State) %>%
summarize(median_ABV=median(ABV),median_IBU=median(IBU))
completedData %>% group_by(State) %>%
summarize(median_ABV=median(ABV),median_IBU=median(IBU))
#Compute and display Median of ABV and IBU by state:
median = completedData %>% group_by(State) %>%
summarize(median_ABV=median(ABV),median_IBU=median(IBU))
median
#Draw Bar Charts to compare
#First plot median of  alcohol content
median %>% ggplot(aes(x=reorder(State,-median_ABV),y=median_ABV))+
geom_bar()
#Draw Bar Charts to compare
#First plot median of  alcohol content
median %>% ggplot(aes(x=reorder(State,-median_ABV),y=median_ABV, fill=State),stat="identity")+
geom_bar()
#Draw Bar Charts to compare
#First plot median of  alcohol content
median %>% ggplot()+
geom_bar(mapping=aes(x=reorder(State,-median_ABV),y=median_ABV,fill=State),stat="identity")
Beers.with.Breweries %>% group_by(State) %>%
summarize(median_ABV=median(ABV),median_IBU=median(IBU))%>% ggplot()+
geom_bar(mapping=aes(x=reorder(State,-median_ABV),y=median_ABV,fill=State),stat="identity")
#Draw Bar Charts to compare
#First plot median of alcohol content
median %>% ggplot()+
geom_bar(mapping=aes(x=reorder(State,-median_ABV),y=median_ABV,fill=State),stat="identity") +
ggtitle("Median Alcohol content by State")+xlab("State")+ylab("Alcohol Content Percentage on modified dataset")
#Draw Bar Charts to compare
#First plot median of alcohol content
median %>% ggplot()+
geom_bar(mapping=aes(x=reorder(State,-median_ABV),y=median_ABV,fill=State),stat="identity") +
ggtitle("Median Alcohol content by State on modified dataset")+xlab("State")+ylab("Alcohol Content Percentage")
#Below is result of using complete data set with missing data to plot median of alcohol content
Beers.with.Breweries %>% group_by(State) %>%
summarize(median_ABV=median(ABV),median_IBU=median(IBU))%>% ggplot()+
geom_bar(mapping=aes(x=reorder(State,-median_ABV),y=median_ABV,fill=State),stat="identity")+
ggtitle("Median Alcohol content by State on non-Modified dataset")+xlab("State")+ylab("Alcohol Content Percentage")
median
#Below is result of plotting median international bitterness unit for each state on modified data set
median %>% ggplot()+
geom_bar(mapping=aes(x=reorder(State,-median_ABV),y=median_IBU,fill=State),stat="identity") +
ggtitle("Median International Bitterness Unit by State on modified dataset")+xlab("State")+ylab("International Bitterness Unit")
#Below is result of plotting median international bitterness unit for each state on modified data set
median %>% ggplot()+
geom_bar(mapping=aes(x=reorder(State,-median_IBU),y=median_IBU,fill=State),stat="identity") +
ggtitle("Median International Bitterness Unit by State on modified dataset")+xlab("State")+ylab("International Bitterness Unit")
#Below is result of using complete data set with missing data to plot median of alcohol content
Beers.with.Breweries %>% group_by(State) %>%
summarize(median_ABV=median(ABV),median_IBU=median(IBU))%>% ggplot()+
geom_bar(mapping=aes(x=reorder(State,-median_IBU),y=median_IBU,fill=State),stat="identity") +
ggtitle("Median International Bitterness Unit by State on non-modified dataset")+xlab("State")+ylab("International Bitterness Unit")
# dataset should be in the same folder of this RMD file
Beers = read.csv("/Users/mingyang/Desktop/SMU/DoingDS_Fall2020/MSDS6306-Case-Study1/Beers.csv",header = TRUE) #loading beers dataset
Breweries = read.csv("/Users/mingyang/Desktop/SMU/DoingDS_Fall2020/MSDS6306-Case-Study1/Breweries.csv",header = TRUE) #loading breweries dataset
#below this line is for self analyzation
summary(Beers)
str(Beers)
Beers$IBU
summary(Breweries)
str(Breweries)
#Above this line is for self analyzing can be deleted later
#Turn Breweries State column into a factor
Breweries$State = as.factor(Breweries$State)
# dataset should be in the same folder of this RMD file
Beers = read.csv("/Users/mingyang/Desktop/SMU/DoingDS_Fall2020/MSDS6306-Case-Study1/Beers.csv",header = TRUE) #loading beers dataset
Breweries = read.csv("/Users/mingyang/Desktop/SMU/DoingDS_Fall2020/MSDS6306-Case-Study1/Breweries.csv",header = TRUE) #loading breweries dataset
#below this line is for self analyzation
summary(Beers)
str(Beers)
Beers$IBU
summary(Breweries)
str(Breweries)
#Above this line is for self analyzing can be deleted later
#Turn Breweries State column into a factor
Breweries$State = as.factor(Breweries$State)
### How many breweries are present in each state?
- As we can see by the plot below, each state's breweries count is displayed in a bar chart
- To make it easier to see which state has the most breweries, we assorted the breweries count by descending order
```{r}
library(tidyverse)
library(ggplot2)
num_Breweries_by_state = Breweries %>% group_by(State) %>%
summarise(count=n())
num_Breweries_by_state
#As we can see the number of breweries per state is in the list below, to see this better we will use a plot to show results
ggplot(data=num_Breweries_by_state)+
geom_bar(mapping=aes(x=State,y=count,fill=State),stat="identity") +
ggtitle("Breweries count by state")+xlab("State")+ylab("Count of Breweries")
#To see this by descend of count
ggplot(data=num_Breweries_by_state)+
geom_bar(mapping=aes(x=reorder(State,-count),y=count,fill=State),stat="identity") +
ggtitle("Breweries count by state")+xlab("State")+ylab("Count of Breweries")
```
Merge beer data with the breweries data. Print the first 6 observations and the last six observations to check the merged file.
```{r}
Beers = Beers %>% rename(Brew_ID= Brewery_id)
Beers.with.Breweries = left_join(Beers,Breweries, by = "Brew_ID")
```
Beers = Beers %>% rename(Brew_ID= Brewery_id)
Beers.with.Breweries = left_join(Beers,Breweries, by = "Brew_ID")
View(Beers)
# dataset should be in the same folder of this RMD file
Beers = read.csv("/Users/mingyang/Desktop/SMU/DoingDS_Fall2020/MSDS6306-Case-Study1/Beers.csv",header = TRUE) #loading beers dataset
Breweries = read.csv("/Users/mingyang/Desktop/SMU/DoingDS_Fall2020/MSDS6306-Case-Study1/Breweries.csv",header = TRUE) #loading breweries dataset
#below this line is for self analyzation
summary(Beers)
str(Beers)
Beers$IBU
summary(Breweries)
str(Breweries)
#Above this line is for self analyzing can be deleted later
#Turn Breweries State column into a factor
Breweries$State = as.factor(Breweries$State)
library(tidyverse)
library(ggplot2)
num_Breweries_by_state = Breweries %>% group_by(State) %>%
summarise(count=n())
num_Breweries_by_state
#As we can see the number of breweries per state is in the list below, to see this better we will use a plot to show results
ggplot(data=num_Breweries_by_state)+
geom_bar(mapping=aes(x=State,y=count,fill=State),stat="identity") +
ggtitle("Breweries count by state")+xlab("State")+ylab("Count of Breweries")
#To see this by descend of count
ggplot(data=num_Breweries_by_state)+
geom_bar(mapping=aes(x=reorder(State,-count),y=count,fill=State),stat="identity") +
ggtitle("Breweries count by state")+xlab("State")+ylab("Count of Breweries")
Beers = Beers %>% rename(Brew_ID= Brewery_id)
Beers.with.Breweries = left_join(Beers,Breweries, by = "Brew_ID")
Beers.with.Breweries = Beers.with.Breweries %>% rename(Beer_Name= Name.x)
Beers.with.Breweries = Beers.with.Breweries %>% rename(Brew_Name= Name.y)
summary(Beers.with.Breweries)
library(mice) #Load mice library to analyze the pattern of missing data
md.pattern(Beers.with.Breweries)
# Since there is large amont of data missing in IBM column
#Try to impute the missing data with Predictive mean Matching method
tempData <- mice(Beers.with.Breweries,m=5,maxit=50,meth='pmm',seed=20)
summary(tempData)
completedData <- complete(tempData,1)
head(completedData,100)
head(completedData)
# Density plot original vs imputed dataset
densityplot(tempData)
#Compute and display Median of ABV and IBU by state:
median = completedData %>% group_by(State) %>%
summarize(median_ABV=median(ABV),median_IBU=median(IBU))
median
#Draw Bar Charts to compare
#First plot median of alcohol content using modified data
median %>% ggplot()+
geom_bar(mapping=aes(x=reorder(State,-median_ABV),y=median_ABV,fill=State),stat="identity") +
ggtitle("Median Alcohol content by State on modified dataset")+xlab("State")+ylab("Alcohol Content Percentage")
#Below is result of using complete data set with missing data to plot median of alcohol content
Beers.with.Breweries %>% group_by(State) %>%
summarize(median_ABV=median(ABV),median_IBU=median(IBU))%>% ggplot()+
geom_bar(mapping=aes(x=reorder(State,-median_ABV),y=median_ABV,fill=State),stat="identity")+
ggtitle("Median Alcohol content by State on non-Modified dataset")+xlab("State")+ylab("Alcohol Content Percentage")
#Below is result of plotting median international bitterness unit for each state on modified data set
median %>% ggplot()+
geom_bar(mapping=aes(x=reorder(State,-median_IBU),y=median_IBU,fill=State),stat="identity") +
ggtitle("Median International Bitterness Unit by State on modified dataset")+xlab("State")+ylab("International Bitterness Unit")
#Below is result of using complete data set with missing data to plot median of alcohol content
Beers.with.Breweries %>% group_by(State) %>%
summarize(median_ABV=median(ABV),median_IBU=median(IBU))%>% ggplot()+
geom_bar(mapping=aes(x=reorder(State,-median_IBU),y=median_IBU,fill=State),stat="identity") +
ggtitle("Median International Bitterness Unit by State on non-modified dataset")+xlab("State")+ylab("International Bitterness Unit")
