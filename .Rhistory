num_Breweries_by_state = Breweries %>% group_by(State) %>%
summarise(count=n())
num_Breweries_by_state
#As we can see the number of breweries per state is in the list below, to see this better we will use a plot to show results
ggplot(data=num_Breweries_by_state)+
geom_bar(mapping=aes(x=State,y=count,fill=State),stat="identity") +
ggtitle("Breweries count by state")+xlab("State")+ylab("Count of Breweries")
#To see this by descend of count
ggplot(data=num_Breweries_by_state)+
geom_bar(mapping=aes(x=reorder(State,-count),y=count,fill=State),stat="identity") +
ggtitle("Breweries count by state")+xlab("State")+ylab("Count of Breweries")
Beers = Beers %>% rename(Brew_ID= Brewery_id)
Beers.with.Breweries = left_join(Beers,Breweries, by = "Brew_ID")
Beers.with.Breweries = Beers.with.Breweries %>% rename(Beer_Name= Name.x)
Beers.with.Breweries = Beers.with.Breweries %>% rename(Brew_Name= Name.y)
head(Beers.with.Breweries,6)
#As we can see the number of breweries per state is in the list below, to see this better we will use a plot to show results
ggplot(data=num_Breweries_by_state)+
geom_bar(mapping=aes(x=State,y=count,fill=State),stat="identity") +
coord_flip()+
ggtitle("Breweries count by state")+xlab("State")+ylab("Count of Breweries")
#To see this by descend of count
ggplot(data=num_Breweries_by_state)+
geom_bar(mapping=aes(x=reorder(State,-count),y=count,fill=State),stat="identity") +
coord_flip()+
ggtitle("Breweries count by state")+xlab("State")+ylab("Count of Breweries")
Beers = Beers %>% rename(Brew_ID= Brewery_id)
Beers.with.Breweries = left_join(Beers,Breweries, by = "Brew_ID")
Beers.with.Breweries = Beers.with.Breweries %>% rename(Beer_Name= Name.x)
Beers.with.Breweries = Beers.with.Breweries %>% rename(Brew_Name= Name.y)
head(Beers.with.Breweries,6)
summary(Beers.with.Breweries)
library(mice) #Load mice library to analyze the pattern of missing data
md.pattern(Beers.with.Breweries)
# Since there is large amont of data missing in IBM column
#Try to impute the missing data with Predictive mean Matching method
tempData <- mice(Beers.with.Breweries,m=5,maxit=50,meth='pmm',seed=20)
#summary(tempData)
# completed dataset after adding in generated predictive values
completedData <- complete(tempData,1)
#head(completedData)
# Density plot original vs imputed dataset
densityplot(tempData)
#Note: idea used above to impute data is from link below:
#https://datascienceplus.com/imputing-missing-data-with-r-mice-package/
#Compute and display Median of ABV and IBU by state:
median = completedData %>% group_by(State) %>%
summarize(median_ABV=median(ABV),median_IBU=median(IBU))
median
#Draw Bar Charts to compare
#First plot median of alcohol content using modified data
median %>% ggplot()+
geom_bar(mapping=aes(x=reorder(State,-median_ABV),y=median_ABV,fill=State),stat="identity") +
ggtitle("Median Alcohol content by State on modified dataset")+xlab("State")+ylab("Alcohol Content Percentage")
#Draw Bar Charts to compare
#First plot median of alcohol content using modified data
median %>% ggplot()+
geom_bar(mapping=aes(x=reorder(State,-median_ABV),y=median_ABV,fill=State),stat="identity") +
coord_flip()+
ggtitle("Median Alcohol content by State on modified dataset")+xlab("State")+ylab("Alcohol Content Percentage")
#Below is result of using complete data set with missing data to plot median of alcohol content
Beers.with.Breweries %>% group_by(State) %>%
summarize(median_ABV=median(ABV),median_IBU=median(IBU))%>% ggplot()+
geom_bar(mapping=aes(x=reorder(State,-median_ABV),y=median_ABV,fill=State),stat="identity")+
coord_flip()+
ggtitle("Median Alcohol content by State on non-Modified dataset")+xlab("State")+ylab("Alcohol Content Percentage")
#Below is result of plotting median international bitterness unit for each state on modified data set
median %>% ggplot()+
geom_bar(mapping=aes(x=reorder(State,-median_IBU),y=median_IBU,fill=State),stat="identity") +
coord_flip()+
ggtitle("Median International Bitterness Unit by State on modified dataset")+xlab("State")+ylab("International Bitterness Unit")
#Below is result of using complete data set with missing data to plot median of alcohol content
Beers.with.Breweries %>% group_by(State) %>%
summarize(median_ABV=median(ABV),median_IBU=median(IBU))%>% ggplot()+
geom_bar(mapping=aes(x=reorder(State,-median_IBU),y=median_IBU,fill=State),stat="identity") +
coord_flip()+
ggtitle("Median International Bitterness Unit by State on non-modified dataset")+xlab("State")+ylab("International Bitterness Unit")
#Below is result of using complete data set with missing data to plot median of alcohol content
Beers.with.Breweries %>% group_by(State) %>%
summarize(median_ABV=median(ABV),median_IBU=median(IBU))%>% ggplot()+
geom_bar(mapping=aes(x=reorder(State,-median_ABV),y=median_ABV,fill=State),stat="identity")+
coord_flip()+
ggtitle("Median Alcohol content by State on non-Modified dataset")+xlab("State")+ylab("Alcohol Content Percentage")
#Below is result of plotting median international bitterness unit for each state on modified data set
median %>% ggplot()+
geom_bar(mapping=aes(x=reorder(State,-median_IBU),y=median_IBU,fill=State),stat="identity") +
coord_flip()+
ggtitle("Median International Bitterness Unit by State on modified dataset")+xlab("State")+ylab("International Bitterness Unit")
# Discover which state has the maximum alcoholic beer
head(completedData %>%
arrange(desc(ABV)) %>%
select(State,ABV,Beer_Name))
# Discover with un-changed data set
head(Beers.with.Breweries %>%
arrange(desc(ABV)) %>%
select(State,ABV,Beer_Name))
# Discover which state has the most bitter (IBU) beer
head(completedData %>%
arrange(desc(IBU)) %>%
select(State,IBU,Beer_Name))
# Boxplot
completeData_J %>% ggplot(aes(x=ABV)) +
geom_boxplot(outlier.colour="red", outlier.shape=8,
outlier.size=4, width=0.1) +
ggtitle("boxplot showing distribution of ABV values(filled NA dataset)")+xlab("Alcohol by volume")
# Boxplot
completeData %>% ggplot(aes(x=ABV)) +
geom_boxplot(outlier.colour="red", outlier.shape=8,
outlier.size=4, width=0.1) +
ggtitle("boxplot showing distribution of ABV values(filled NA dataset)")+xlab("Alcohol by volume")
# Boxplot
completedData %>% ggplot(aes(x=ABV)) +
geom_boxplot(outlier.colour="red", outlier.shape=8,
outlier.size=4, width=0.1) +
ggtitle("boxplot showing distribution of ABV values(filled NA dataset)")+xlab("Alcohol by volume")
# Boxplot
completedData %>% ggplot(aes(y=ABV)) +
geom_boxplot(outlier.colour="red", outlier.shape=8,
outlier.size=4, width=0.1) +
ggtitle("boxplot showing distribution of ABV values(filled NA dataset)")+xlab("Alcohol by volume")
# Boxplot
completedData %>% ggplot(aes(y=ABV)) +
geom_boxplot(outlier.colour="red", outlier.shape=4,
outlier.size=4, width=0.1) +
ggtitle("boxplot showing distribution of ABV values(filled NA dataset)")+xlab("Alcohol by volume")
# Boxplot
completedData %>% ggplot(aes(y=ABV)) +
geom_boxplot(outlier.colour="red", outlier.shape=8,
outlier.size=4, width=0.01) +
ggtitle("boxplot showing distribution of ABV values(filled NA dataset)")+xlab("Alcohol by volume")
# Boxplot
completedData %>% ggplot(aes(y=ABV)) +
geom_boxplot(outlier.colour="red", outlier.shape=8,
outlier.size=4, width=0.1) +
ggtitle("boxplot showing distribution of ABV values(filled NA dataset)")+xlab("Alcohol by volume")
Alcohol by volume
# Boxplot
completedData %>% ggplot(aes(y=ABV)) +
geom_boxplot(outlier.colour="red", outlier.shape=8,
outlier.size=4, width=0.1) +
ggtitle("Boxplot showing distribution of ABV values")+xlab("Alcohol by volume")
# Boxplot
completedData %>% ggplot(aes(x=ABV)) +
geom_boxplot(outlier.colour="red", outlier.shape=8,
outlier.size=4, width=0.1) +
ggtitle("Boxplot showing distribution of ABV values")+xlab("Alcohol by volume")
# Boxplot
completedData %>% ggplot(aes(x=ABV)) +
geom_boxplot(width=0.5/length(unique(ABV))) +
ggtitle("Boxplot showing distribution of ABV values")+xlab("Alcohol by volume")
# Boxplot
completedData %>% ggplot(aes(x=ABV)) +
geom_boxplot(width=0.5/length(unique(completedData$ABV))) +
ggtitle("Boxplot showing distribution of ABV values")+xlab("Alcohol by volume")
# Boxplot
completedData %>% ggplot(aes(x=ABV)) +
geom_boxplot(width=0.3/length(unique(completedData$ABV))) +
ggtitle("Boxplot showing distribution of ABV values")+xlab("Alcohol by volume")
# Boxplot
completedData %>% ggplot(aes(x=ABV, color="red")) +
geom_boxplot(width=0.5/length(unique(completedData$ABV))) +
ggtitle("Boxplot showing distribution of ABV values")+xlab("Alcohol by volume")
# Boxplot
completedData %>% ggplot(aes(x=ABV,size=ABV)) +
geom_boxplot(width=0.5/length(unique(completedData$ABV))) +
ggtitle("Boxplot showing distribution of ABV values")+xlab("Alcohol by volume")
# Boxplot
completedData %>% ggplot(aes(x=ABV)) +
geom_boxplot(width=0.5/length(unique(completedData$ABV))) +
ggtitle("Boxplot showing distribution of ABV values")+xlab("Alcohol by volume")
# Boxplot
completedData %>% ggplot(aes(x=ABV)) +
geom_boxplot(outlier.colour="black", outlier.shape=16,
outlier.size=2) +
ggtitle("Boxplot showing distribution of ABV values")+xlab("Alcohol by volume")
# Boxplot
completedData %>% ggplot(aes(x=ABV)) +
geom_boxplot(outlier.colour="red", outlier.shape=8,
outlier.size=4, width=0.1) +
ggtitle("boxplot showing distribution of ABV values(filled NA dataset)")+xlab("Alcohol by volume")
# Boxplot
completedData %>% ggplot(aes(x=ABV)) +
geom_boxplot(outlier.colour="red", outlier.shape=8,
outlier.size=4, width=0.1) +
ggtitle("Boxplot showing distribution of ABV values")+xlab("Alcohol by volume")
# Boxplot
completedData %>% ggplot(aes(x=ABV, fill=State)) +
geom_boxplot(outlier.colour="red", outlier.shape=8,
outlier.size=4, width=0.1) +
ggtitle("Boxplot showing distribution of ABV values")+xlab("Alcohol by volume")
# Boxplot
completedData %>% ggplot(aes(x=ABV, fill=ABV)) +
geom_boxplot(outlier.colour="red", outlier.shape=8,
outlier.size=4, width=0.1) +
ggtitle("Boxplot showing distribution of ABV values")+xlab("Alcohol by volume")
# Boxplot
completedData %>% ggplot(aes(x=ABV, fill="Green")) +
geom_boxplot(outlier.colour="red", outlier.shape=8,
outlier.size=4, width=0.1) +
ggtitle("Boxplot showing distribution of ABV values")+xlab("Alcohol by volume")
# Boxplot
completedData %>% ggplot(aes(x=ABV),fill="green") +
geom_boxplot(outlier.colour="red", outlier.shape=8,
outlier.size=4, width=0.1) +
ggtitle("Boxplot showing distribution of ABV values")+xlab("Alcohol by volume")
# Boxplot
completedData %>% ggplot(aes(x=ABV)) +
geom_boxplot(fill="green",outlier.colour="red", outlier.shape=8,
outlier.size=4, width=0.1) +
ggtitle("Boxplot showing distribution of ABV values")+xlab("Alcohol by volume")
# Boxplot
completedData %>% ggplot(aes(x=ABV)) +
geom_boxplot(fill="green",outlier.colour="green", outlier.shape=8,
outlier.size=4, width=0.1) +
ggtitle("Boxplot showing distribution of ABV values")+xlab("Alcohol by volume")
# Boxplot
completedData %>% ggplot(aes(x=ABV)) +
geom_boxplot(fill="green",outlier.colour="red", outlier.shape=8,
outlier.size=4, width=0.1) +
ggtitle("Boxplot showing distribution of ABV values")+xlab("Alcohol by volume")
# Summary of adjusted Data
summary(completedData)
# Summary of unadjusted Data
summary(Beers.with.Breweries)
#first explore modified data
completeData %>%
ggplot(aes(x=ABV, y=IBU)) +
geom_point(size=2, shape=23, color = "dark green") +
geom_smooth(method=lm) +
ggtitle("Plot of alcohol content and bitterness (filled NA data set)")+xlab("Alcohol by volume")+ylab("International Bitterness Unit")
#first explore modified data
completedData %>%
ggplot(aes(x=ABV, y=IBU)) +
geom_point(size=2, shape=23, color = "dark green") +
geom_smooth(method=lm) +
ggtitle("Plot of alcohol content and bitterness (filled NA data set)")+xlab("Alcohol by volume")+ylab("International Bitterness Unit")
#first explore modified data
completedData %>%
ggplot(aes(x=ABV, y=IBU)) +
geom_point(size=2, shape=23, color = "dark green") +
geom_point(position="jitter")+
geom_smooth(method=lm) +
ggtitle("IBU vs. ABV")+xlab("Alcohol by volume")+ylab("International Bitterness Unit")
#first explore modified data
completedData %>%
ggplot(aes(x=ABV, y=IBU)) +
geom_point(size=2, shape=23, color = "dark green") +
geom_smooth(method=lm) +
ggtitle("IBU vs. ABV")+xlab("Alcohol by volume")+ylab("International Bitterness Unit")
#next explore unmodified data
Beers.with.Breweries %>% select(ABV, IBU, State) %>%
ggplot(aes(x=ABV, y=IBU)) +
geom_point(size=2, shape=23, color = "dark green") +
geom_smooth(method=lm) +
ggtitle("IBU vs. ABV")+xlab("Alcohol by volume")+ylab("International Bitterness Unit")
#first explore modified data
completedData %>%
ggplot(aes(x=ABV, y=IBU)) +
geom_point(size=2, shape=23, color = "dark green") +
geom_smooth(method=lm) +
ggtitle("IBU vs. ABV")+xlab("Alcohol by volume")+ylab("International Bitterness Unit")
#first explore modified data
completedData %>%
ggplot(aes(x=ABV, y=IBU)) +
geom_point(size=2, shape=23, color = "dark green") +
geom_smooth(method=lm) +
ggtitle("IBU vs. ABV")+xlab("Alcohol by volume")+ylab("International Bitterness Unit")
#first explore modified data
completedData %>%
ggplot(aes(x=ABV, y=IBU)) +
geom_point(size=2, shape=23, color = "dark green",position="jitter") +
geom_smooth(method=lm) +
ggtitle("IBU vs. ABV")+xlab("Alcohol by volume")+ylab("International Bitterness Unit")
library(ggplot2)
library(dplyr)
library(mapproj)
library(plyr)
lookup = data.frame(abb = state.abb, State = state.name) #makes a data frame with State name and abbreviation.
#lookup
colnames(completedData)[10] = "abb"
completedData$abb = as.character(completedData$abb)
Breweries2 = merge(completedData,lookup, by.x = "abb", by.y="abb", all.x=TRUE) # make one dataset with state names and abb
#Breweries2
Breweries2$ABV <- as.numeric(Breweries2$ABV)
BreweriesMapData <- Breweries2 %>% select(ABV, State) %>% group_by(State)
#BreweriesMapData
BreweriesMapData <- aggregate(. ~ State, BreweriesMapData, mean)
BreweriesMapData$region <- tolower(BreweriesMapData$State)
BreweriesMapData = BreweriesMapData[-1]
#BreweriesMapData
states <- map_data("state")
#states
map.df <- full_join(states,BreweriesMapData, by="region", all.x=T)
#map.df
map.df <- map.df[order(map.df$order),]
h <- ggplot(map.df, aes(x=long,y=lat,group=group))+
geom_polygon(aes(fill=ABV))+
geom_path()+
scale_fill_gradientn(colours=rev(heat.colors(5)),na.value="grey90")+ggtitle("Average ABV By State")+
coord_map()
ggplotly(h)
library(ggplot2)
library(dplyr)
library(mapproj)
library(plyr)
lookup = data.frame(abb = state.abb, State = state.name) #makes a data frame with State name and abbreviation.
#lookup
colnames(completedData)[10] = "abb"
completedData$abb = as.character(completedData$abb)
Breweries2 = merge(completedData,lookup, by.x = "abb", by.y="abb", all.x=TRUE) # make one dataset with state names and abb
#Breweries2
Breweries2$ABV <- as.numeric(Breweries2$ABV)
BreweriesMapData <- Breweries2 %>% select(ABV, State) %>% group_by(State)
#BreweriesMapData
BreweriesMapData <- aggregate(. ~ State, BreweriesMapData, mean)
BreweriesMapData$region <- tolower(BreweriesMapData$State)
BreweriesMapData = BreweriesMapData[-1]
#BreweriesMapData
states <- map_data("state")
#states
map.df <- full_join(states,BreweriesMapData, by="region", all.x=T)
#map.df
map.df <- map.df[order(map.df$order),]
h <- ggplot(map.df, aes(x=long,y=lat,group=group))+
geom_polygon(aes(fill=ABV))+
geom_path()+
scale_fill_gradientn(colours=rev(heat.colors(5)),na.value="grey90")+ggtitle("Average ABV By State")+
coord_map()
ggplotly(h)
library(ggplot2)
library(dplyr)
library(mapproj)
library(plyr)
library(ggplot2)
library(dplyr)
library(mapproj)
library(plyr)
lookup = data.frame(abb = state.abb, State = state.name) #makes a data frame with State name and abbreviation.
#lookup
colnames(completedData)[10] = "abb"
completedData$abb = as.character(completedData$abb)
Breweries2 = merge(completedData,lookup, by.x = "abb", by.y="abb", all.x=TRUE) # make one dataset with state names and abb
#Breweries2
Breweries2$ABV <- as.numeric(Breweries2$ABV)
BreweriesMapData <- Breweries2 %>% select(ABV, State) %>% group_by(State)
#BreweriesMapData
BreweriesMapData <- aggregate(. ~ State, BreweriesMapData, mean)
BreweriesMapData$region <- tolower(BreweriesMapData$State)
BreweriesMapData = BreweriesMapData[-1]
#BreweriesMapData
states <- map_data("state")
#states
map.df <- full_join(states,BreweriesMapData, by="region", all.x=T)
#map.df
map.df <- map.df[order(map.df$order),]
h <- ggplot(map.df, aes(x=long,y=lat,group=group))+
geom_polygon(aes(fill=ABV))+
geom_path()+
scale_fill_gradientn(colours=rev(heat.colors(5)),na.value="grey90")+ggtitle("Average ABV By State")+
coord_map()
ggplotly(h)
lookup = data.frame(abb = state.abb, State = state.name) #makes a data frame with State name and abbreviation.
#lookup
colnames(completedData)[10] = "abb"
completedData$abb = as.character(completedData$abb)
Breweries2 = merge(completedData,lookup, by.x = "abb", by.y="abb", all.x=TRUE) # make one dataset with state names and abb
#Breweries2
Breweries2$ABV <- as.numeric(Breweries2$ABV)
BreweriesMapData <- Breweries2 %>% select(ABV, State) %>% group_by(State)
#BreweriesMapData
BreweriesMapData <- aggregate(. ~ State, BreweriesMapData, mean)
BreweriesMapData$region <- tolower(BreweriesMapData$State)
BreweriesMapData = BreweriesMapData[-1]
#BreweriesMapData
states <- map_data("state")
#states
map.df <- full_join(states,BreweriesMapData, by="region", all.x=T)
#map.df
map.df <- map.df[order(map.df$order),]
h <- ggplot(map.df, aes(x=long,y=lat,group=group))+
geom_polygon(aes(fill=ABV))+
geom_path()+
scale_fill_gradientn(colours=rev(heat.colors(5)),na.value="grey90")+ggtitle("Average ABV By State")+
coord_map()
ggplotly(h)
#import map library
library(maps)
library(plotly)
ggplotly(h)
library(plyr)
library(ggmap)
library(usmap)
library(rgdal)
library(sf)
library(maptools)
states <- read.csv("/Users/mingyang/Desktop/SMU/DoingDS_Fall2020/MSDS6306-Case-Study1/uscities.csv",header = TRUE)
states$region <- tolower(states$state_name)
lookup = data.frame(abb = state.abb, State = state.name) #makes a data frame with State name and abbreviation.
#lookup
completedData$abb = as.character(completedData$abb)
Breweries2 = merge(completedData,lookup, by.x = "abb", by.y="abb", all.x=TRUE) # make one dataset with state names and abb
#str(Breweries2)
#Breweries2$ABV <- as.numeric(Breweries2$ABV)
BreweriesMapData <- Breweries2 %>% select(ABV, State) %>% group_by(State)
#head(BreweriesMapData)
BreweriesMapData <- aggregate(. ~ State, BreweriesMapData, mean)
BreweriesMapData$region <- tolower(BreweriesMapData$State)
#states
map.df <- left_join(states, BreweriesMapData, by="region")
#map.df
#colnames(map.df)
map.df <- map.df[, c(8,7,1,2,3,4,5,6,9,10,11,12,13,14,15,16,17,18,19,20)]
map.df <- usmap_transform(map.df)
#map.df
#map.df <- map.df[order(map.df$order),]
plot_usmap() +
geom_point(data = map.df, aes(x = lng.1, y = lat.1, size = ABV),
color = "Dark Green", alpha = .01) +
labs(title = "Average ABV By City per State",
subtitle = "Source: USGS",
size = "ABV") +
theme(legend.position = "right")
#first explore modified data
completedData %>%
ggplot(aes(x=ABV, y=IBU)) +
geom_point(size=2, shape=23, color = "dark green",position="jitter") +
geom_smooth(method=lm) +
ggtitle("IBU vs. ABV")+xlab("Alcohol by volume")+ylab("International Bitterness Unit")
#next explore unmodified data
Beers.with.Breweries %>% select(ABV, IBU, State) %>%
ggplot(aes(x=ABV, y=IBU)) +
geom_point(size=2, shape=23, color = "dark green",position="jitter") +
geom_smooth(method=lm) +
ggtitle("IBU vs. ABV")+xlab("Alcohol by volume")+ylab("International Bitterness Unit")
completedData %>% select(State, ABV)
completedData %>% select(abb, ABV)
completedData %>% select(abb, ABV) %>% filter(abb=="NV")
completedData %>% select(abb, ABV, Brew_Name) %>% filter(abb=="NV")
p <-p + geom_point(data = dataWithMap3, aes(x = lng, y = lat, size=count,alpha=count),color="blue")+
ggtitle("Density of Ales by Cities") + xlab("Longitude")+ylab("Latitute")
#import map library
library(maps)
library(plotly)
# Import US Cities location data
uscities <- read.csv("/Users/mingyang/Desktop/SMU/DoingDS_Fall2020/MSDS6306-Case-Study1/uscities.csv",header = TRUE)
uscities = uscities%>%rename(City = city)
uscities = uscities%>% group_by(City) %>% filter(row_number()==1)
# Getting all Ales Beer available
allAles2 = completedData %>% filter(str_detect(completedData$Beer_Name,regex("Ale",ignore.case=TRUE)))
dataWithMap = left_join(allAles2,uscities, by = "City")
#str(dataWithMap)
#dataWithMap %>% filter((is.na(lng))|(is.na(lat))) %>% select(Brew_Name,City)
dataWithMap2 = dataWithMap %>% select(Beer_Name,City,lat,lng,state_name)
#head(dataWithMap2,100)
dataWithMap3 = dataWithMap2 %>% group_by(City) %>% mutate(count = n())
dataWithMap3 = dataWithMap3 %>% group_by(City)%>%filter(row_number()==1)%>%
filter((!is.na(lng))&(!is.na(lat)))
states <- map_data("state")
p <- ggplot() +
geom_polygon(data = states, aes(x = long, y = lat, group = group), fill = "yellow", color = "black") +
coord_quickmap()
p <-p + geom_point(data = dataWithMap3, aes(x = lng, y = lat, size=count,alpha=count),color="blue")+
ggtitle("Density of Ales by Cities") + xlab("Longitude")+ylab("Latitute")
ggplotly(p)
#import map library
library(maps)
library(plotly)
# Import US Cities location data
uscities <- read.csv("/Users/mingyang/Desktop/SMU/DoingDS_Fall2020/MSDS6306-Case-Study1/uscities.csv",header = TRUE)
uscities = uscities%>%rename(City = city)
uscities = uscities%>% group_by(City) %>% filter(row_number()==1)
# Getting all Ales Beer available
allAles2 = completedData %>% filter(str_detect(completedData$Beer_Name,regex("Ale",ignore.case=TRUE)))
dataWithMap = left_join(allAles2,uscities, by = "City")
#str(dataWithMap)
#dataWithMap %>% filter((is.na(lng))|(is.na(lat))) %>% select(Brew_Name,City)
dataWithMap2 = dataWithMap %>% select(Beer_Name,City,lat,lng,state_name)
#head(dataWithMap2,100)
dataWithMap3 = dataWithMap2 %>% group_by(City) %>% mutate(count = n())
dataWithMap3 = dataWithMap3 %>% group_by(City)%>%filter(row_number()==1)%>%
filter((!is.na(lng))&(!is.na(lat)))
states <- map_data("state")
p <- ggplot() +
geom_polygon(data = states, aes(x = long, y = lat, group = group), fill = "yellow", color = "black") +
coord_quickmap()
p <-p + geom_point(data = dataWithMap3, aes(x = lng, y = lat, size=count,alpha=count),color="blue")+
ggtitle("Density of Ales by City") + xlab("Longitude")+ylab("Latitute")
ggplotly(p)
#import map library
library(maps)
library(plotly)
# Import US Cities location data
uscities <- read.csv("/Users/mingyang/Desktop/SMU/DoingDS_Fall2020/MSDS6306-Case-Study1/uscities.csv",header = TRUE)
uscities = uscities%>%rename(City = city)
uscities = uscities%>% group_by(City) %>% filter(row_number()==1)
# Getting all Ales Beer available
allAles2 = completedData %>% filter(str_detect(completedData$Beer_Name,regex("Ale",ignore.case=TRUE)))
dataWithMap = left_join(allAles2,uscities, by = "City")
#str(dataWithMap)
#dataWithMap %>% filter((is.na(lng))|(is.na(lat))) %>% select(Brew_Name,City)
dataWithMap2 = dataWithMap %>% select(Beer_Name,City,lat,lng,state_name)
#head(dataWithMap2,100)
dataWithMap3 = dataWithMap2 %>% group_by(City) %>% mutate(count = n())
dataWithMap3 = dataWithMap3 %>% group_by(City)%>%filter(row_number()==1)%>%
filter((!is.na(lng))&(!is.na(lat)))
states <- map_data("state")
p <- ggplot() +
geom_polygon(data = states, aes(x = long, y = lat, group = group), fill = "yellow", color = "black") +
coord_quickmap()
p <-p + geom_point(data = dataWithMap3, aes(x = lng, y = lat, size=count,alpha=count),color="blue")+
ggtitle("Density of Ales Facilities by City") + xlab("Longitude")+ylab("Latitute")
ggplotly(p)
